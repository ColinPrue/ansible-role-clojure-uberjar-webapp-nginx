upstream {{ clojure_uberjar_webapp_nginx_upstream_name }} {
    server 127.0.0.1:{{ clojure_uberjar_webapp_app_http_port }};
    # put more servers here for load balancing
    # keepalive(resue TCP connection) improves performance
    keepalive 32;  # both http-kit and nginx are good at concurrency
}

server {
    listen         80;
    server_name    {{ clojure_uberjar_webapp_nginx_server_name }};
    return         301 https://{{ clojure_uberjar_webapp_domain }}$request_uri;
    access_log     /var/log/nginx/{{ clojure_uberjar_webapp_app_name }}.access.log;
    error_log      /var/log/nginx/{{ clojure_uberjar_webapp_app_name}}.error.log;
}

server {
    listen 443 default_server ssl;
    server_name {{ clojure_uberjar_webapp_nginx_server_name }};
    ssl on;
    ssl_certificate     {{ clojure_uberjar_webapp_nginx_letsencrypt_dir }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ clojure_uberjar_webapp_app_name }}/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location {{ clojure_uberjar_webapp_nginx_static_location }} {  # static content
        alias {{ clojure_uberjar_webapp_nginx_static_alias }};
    }
  
    location / {
        proxy_pass  http://{{ clojure_uberjar_webapp_nginx_upstream_name }};

        # tell http-kit to keep the connection
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # proxy_set_header x-forwarded-for   $remote_addr;
        proxy_set_header x-forwarded-host  $host;
        proxy_set_header x-forwarded-proto $scheme;
        proxy_set_header x-forwarded-port  $server_port;


        access_log  /var/log/nginx/{{ clojure_uberjar_webapp_app_name }}.access.log;
        error_log   /var/log/nginx/{{ clojure_uberjar_webapp_app_name }}.error.log;
    }
}

{{ clojure_uberjar_webapp_nginx_additional_config }}